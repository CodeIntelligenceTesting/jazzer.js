name: "🏗️ Prerelease"

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  create_release:
    name: create release
    runs-on: ubuntu-20.04
    permissions:
      contents: write # for creating releases

    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: read version
        id: read-version
        run: |
          echo ::set-output name=version::\
          $(cat ./package.json | jq '.version' | tr -d '"')
        shell: bash
      - name: create release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ steps.read-version.outputs.version }}
          body_path: ./.github/release_template.md
          generate_release_notes: true
          draft: false # creating drafts conflicts with prebuild
          prerelease: true # using a prerelease instead

  prebuilds:
    name: create prebuilds
    runs-on: ${{ matrix.os }}
    needs: [create_release]
    strategy:
      matrix:
        os: [ubuntu-20.04, macos-11, windows-2019]
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: node
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: "npm"
      - name: install dependencies (macos)
        if: contains(matrix.os, 'macos')
        run: |
          brew install cmake llvm@14
          LLVM_PATH=$(brew --prefix llvm@14)
          LLVM_CONFIG_PATH=$LLVM_PATH/bin/llvm-config
          echo "CC=$($LLVM_CONFIG_PATH --bindir)/clang" >> $GITHUB_ENV
          echo "CXX=$($LLVM_CONFIG_PATH --bindir)/clang++" >> $GITHUB_ENV
          echo "CFLAGS=$($LLVM_CONFIG_PATH --cflags)" >> $GITHUB_ENV 
          echo "CXXFLAGS=$($LLVM_CONFIG_PATH --cxxflags)" >> $GITHUB_ENV 
          echo "LDFLAGS=$($LLVM_CONFIG_PATH --ldflags)" >> $GITHUB_ENV
          echo "SDKROOT=$(xcrun --sdk macosx --show-sdk-path)" >> $GITHUB_ENV
          echo "PATH=$PATH:$($LLVM_CONFIG_PATH --bindir)" >> $GITHUB_ENV
      - name: MSVC (windows)
        uses: ilammy/msvc-dev-cmd@d8610e2b41c6d0f0c3b4c46dad8df0fd826c68e1
        if: contains(matrix.os, 'windows')
      - name: install dependencies
        run: npm install --ws=@jazzer.js/fuzzer
      - name: build and upload prebuilds
        run: >
          npm run upload --workspace=@jazzer.js/fuzzer --
          ${{secrets.GITHUB_TOKEN}}
