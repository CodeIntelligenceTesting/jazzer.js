name: "🔍 Tests"
on:
  pull_request:
    branches: [main]
  workflow_dispatch:
jobs:
  linting:
    name: lint
    runs-on: ubuntu-20.04
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: node
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: "npm"
      - name: install dependencies
        run: npm install
      - name: install dependencies with apt
        run: |
          wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
          sudo apt-get install software-properties-common
          sudo add-apt-repository 'deb http://apt.llvm.org/focal/ llvm-toolchain-focal-15 main'
          sudo apt-get install clang-tidy-15
          sudo rm -f /usr/bin/clang-tidy
          sudo ln -s /usr/bin/clang-tidy-15 /usr/bin/clang-tidy
      - name: check formatting and linting
        run: npm run check
  unit_tests:
    name: unit tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, windows-2019, macos-11]
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: node
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: "npm"
      - name: install dependencies (macos)
        if: contains(matrix.os, 'macos')
        run: |
          brew install cmake llvm@14
          LLVM_PATH=$(brew --prefix llvm@14)
          LLVM_CONFIG_PATH=$LLVM_PATH/bin/llvm-config
          echo "CC=$($LLVM_CONFIG_PATH --bindir)/clang" >> $GITHUB_ENV
          echo "CXX=$($LLVM_CONFIG_PATH --bindir)/clang++" >> $GITHUB_ENV
          echo "CFLAGS=$($LLVM_CONFIG_PATH --cflags)" >> $GITHUB_ENV 
          echo "CXXFLAGS=$($LLVM_CONFIG_PATH --cxxflags)" >> $GITHUB_ENV 
          echo "LDFLAGS=$($LLVM_CONFIG_PATH --ldflags)" >> $GITHUB_ENV
          echo "SDKROOT=$(xcrun --sdk macosx --show-sdk-path)" >> $GITHUB_ENV
      - name: MSVC (windows)
        uses: ilammy/msvc-dev-cmd@v1
        if: contains(matrix.os, 'windows')
      - name: install dependencies
        run: npm install
      - name: build project
        run: npm run build
      - name: build fuzzer
        run: npm run build --workspace=@jazzer.js/fuzzer
      - name: run all tests
        run: npm run test
  fuzz_tests:
    name: fuzz tests
    runs-on: ubuntu-20.04
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: node
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: "npm"
      - name: install dependencies
        run: npm install
      - name: build project
        run: npm run build
      - name: build fuzzer
        run: npm run build --workspace=@jazzer.js/fuzzer
      - name: run all fuzz tests
        run: node fuzztests/runFuzzTests.js
  auto-merge:
    needs:
      - linting
      - unit_tests
      - fuzz_tests
    permissions:
      pull-requests: write
      contents: write
    runs-on: ubuntu-20.04
    steps:
      - uses: fastify/github-action-merge-dependabot@v3.0.0
        with:
          target: minor
          merge-method: rebase
          github-token: ${{ secrets.GITHUB_TOKEN }}
